import sys
import csv
from scapy.all import sniff, IP, TCP
from datetime import datetime
import argparse

def handle_packet(packet, csv_writer):
    if packet.haslayer(TCP) and packet.haslayer(IP):
        timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
        src_ip = packet[IP].src
        dst_ip = packet[IP].dst
        src_port = packet[TCP].sport
        dst_port = packet[TCP].dport
        print(f"[{timestamp}] {src_ip}:{src_port} -> {dst_ip}:{dst_port}")
        csv_writer.writerow([timestamp, src_ip, src_port, dst_ip, dst_port])

def main():
    parser = argparse.ArgumentParser(description="Simple TCP Packet Sniffer with CSV logging")
    parser.add_argument("interface", help="Network interface to sniff on Ethernet or Wi-Fi")
    parser.add_argument("-o", "--output", default="snifflogs.csv", help="Output CSV file")
    args = parser.parse_args()

    with open(args.output, mode='w', newline='') as logfile:
        csv_writer = csv.writer(logfile)
        csv_writer.writerow(["Timestamp", "Source IP", "Source Port", "Destination IP", "Destination Port"])

        try:
            sniff(iface=args.interface, prn=lambda pkt: handle_packet(pkt, csv_writer), store=0)
        except KeyboardInterrupt:
            print("\nSniffing stopped.")
            sys.exit(0)

if __name__ == "__main__":
    main()
